afterEvaluate {
    it.getTasksByName('prepareUi', true).forEach {
        it.dependsOn resolveTask(":ui:component:model:generateTypeScript"), resolveTask(":ui:component:rest:generateTypeScript")
    }
    it.getTasksByName('publishUi', true).forEach {
        it.dependsOn resolveTask(":ui:component:model:generateTypeScript"), resolveTask(":ui:component:rest:generateTypeScript")
    }
    it.getTasksByName('installDist', true).forEach {
        it.dependsOn resolveTask(":ui:component:model:generateTypeScript"), resolveTask(":ui:component:rest:generateTypeScript")
    }
}

task deleteNodeModules {
    doFirst {
       delete "${project(':openremote').projectDir}/node_modules"
    }
}

task clean {
    // Do this as it will conflict with root project node_modules
    if (isCustomProject() && parent == rootProject) {
        dependsOn deleteNodeModules
    }
}

task modelWatch {
    dependsOn resolveTask(":ui:component:model:generateTypeScript"), resolveTask(":ui:component:rest:generateTypeScript")
}